# Generated from FJade.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,35,333,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,
        1,3,1,3,5,3,84,8,3,10,3,12,3,87,9,3,1,3,1,3,1,3,1,3,1,3,1,4,4,4,
        95,8,4,11,4,12,4,96,1,4,1,4,1,5,1,5,1,5,1,5,5,5,105,8,5,10,5,12,
        5,108,9,5,1,5,3,5,111,8,5,1,5,1,5,1,6,4,6,116,8,6,11,6,12,6,117,
        1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,
        1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,
        1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,
        1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,
        1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,3,7,194,8,7,1,8,1,8,1,8,
        1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
        1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
        1,17,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,
        1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,
        1,30,1,30,5,30,294,8,30,10,30,12,30,297,9,30,1,30,1,30,1,31,4,31,
        302,8,31,11,31,12,31,303,1,31,1,31,4,31,308,8,31,11,31,12,31,309,
        3,31,312,8,31,1,32,4,32,315,8,32,11,32,12,32,316,1,33,1,33,1,33,
        5,33,322,8,33,10,33,12,33,325,9,33,1,34,1,34,1,35,4,35,330,8,35,
        11,35,12,35,331,3,85,106,295,0,36,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
        15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,0,71,35,1,0,6,2,0,10,10,13,13,1,
        1,10,10,3,0,9,9,12,12,32,32,2,0,65,90,95,95,8,0,33,33,37,37,43,43,
        45,45,47,47,60,62,65,90,97,122,6,0,43,43,45,45,47,47,60,62,65,90,
        97,122,351,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,71,1,
        0,0,0,1,73,1,0,0,0,3,75,1,0,0,0,5,77,1,0,0,0,7,79,1,0,0,0,9,94,1,
        0,0,0,11,100,1,0,0,0,13,115,1,0,0,0,15,193,1,0,0,0,17,195,1,0,0,
        0,19,200,1,0,0,0,21,209,1,0,0,0,23,217,1,0,0,0,25,230,1,0,0,0,27,
        236,1,0,0,0,29,249,1,0,0,0,31,253,1,0,0,0,33,258,1,0,0,0,35,262,
        1,0,0,0,37,266,1,0,0,0,39,269,1,0,0,0,41,271,1,0,0,0,43,273,1,0,
        0,0,45,275,1,0,0,0,47,277,1,0,0,0,49,279,1,0,0,0,51,281,1,0,0,0,
        53,283,1,0,0,0,55,285,1,0,0,0,57,287,1,0,0,0,59,289,1,0,0,0,61,291,
        1,0,0,0,63,301,1,0,0,0,65,314,1,0,0,0,67,318,1,0,0,0,69,326,1,0,
        0,0,71,329,1,0,0,0,73,74,5,124,0,0,74,2,1,0,0,0,75,76,5,40,0,0,76,
        4,1,0,0,0,77,78,5,41,0,0,78,6,1,0,0,0,79,80,5,47,0,0,80,81,5,42,
        0,0,81,85,1,0,0,0,82,84,9,0,0,0,83,82,1,0,0,0,84,87,1,0,0,0,85,86,
        1,0,0,0,85,83,1,0,0,0,86,88,1,0,0,0,87,85,1,0,0,0,88,89,5,42,0,0,
        89,90,5,47,0,0,90,91,1,0,0,0,91,92,6,3,0,0,92,8,1,0,0,0,93,95,7,
        0,0,0,94,93,1,0,0,0,95,96,1,0,0,0,96,94,1,0,0,0,96,97,1,0,0,0,97,
        98,1,0,0,0,98,99,6,4,0,0,99,10,1,0,0,0,100,101,5,47,0,0,101,102,
        5,47,0,0,102,106,1,0,0,0,103,105,9,0,0,0,104,103,1,0,0,0,105,108,
        1,0,0,0,106,107,1,0,0,0,106,104,1,0,0,0,107,110,1,0,0,0,108,106,
        1,0,0,0,109,111,7,1,0,0,110,109,1,0,0,0,111,112,1,0,0,0,112,113,
        6,5,0,0,113,12,1,0,0,0,114,116,7,2,0,0,115,114,1,0,0,0,116,117,1,
        0,0,0,117,115,1,0,0,0,117,118,1,0,0,0,118,119,1,0,0,0,119,120,6,
        6,0,0,120,14,1,0,0,0,121,122,5,65,0,0,122,123,5,108,0,0,123,124,
        5,108,0,0,124,125,5,80,0,0,125,126,5,108,0,0,126,127,5,97,0,0,127,
        128,5,121,0,0,128,129,5,101,0,0,129,130,5,114,0,0,130,194,5,115,
        0,0,131,132,5,83,0,0,132,133,5,101,0,0,133,134,5,108,0,0,134,135,
        5,101,0,0,135,136,5,99,0,0,136,137,5,116,0,0,137,138,5,105,0,0,138,
        139,5,111,0,0,139,194,5,110,0,0,140,141,5,68,0,0,141,142,5,101,0,
        0,142,143,5,102,0,0,143,144,5,97,0,0,144,145,5,117,0,0,145,146,5,
        108,0,0,146,194,5,116,0,0,147,148,5,86,0,0,148,149,5,105,0,0,149,
        150,5,99,0,0,150,151,5,116,0,0,151,152,5,105,0,0,152,194,5,109,0,
        0,153,154,5,75,0,0,154,155,5,105,0,0,155,156,5,108,0,0,156,157,5,
        108,0,0,157,158,5,101,0,0,158,194,5,114,0,0,159,160,5,68,0,0,160,
        161,5,97,0,0,161,162,5,109,0,0,162,163,5,97,0,0,163,164,5,103,0,
        0,164,165,5,101,0,0,165,194,5,114,0,0,166,167,5,83,0,0,167,168,5,
        104,0,0,168,169,5,111,0,0,169,170,5,111,0,0,170,171,5,116,0,0,171,
        172,5,101,0,0,172,194,5,114,0,0,173,174,5,80,0,0,174,175,5,114,0,
        0,175,176,5,111,0,0,176,177,5,106,0,0,177,178,5,101,0,0,178,179,
        5,99,0,0,179,180,5,116,0,0,180,181,5,105,0,0,181,182,5,108,0,0,182,
        194,5,101,0,0,183,184,5,76,0,0,184,185,5,97,0,0,185,186,5,115,0,
        0,186,187,5,116,0,0,187,188,5,69,0,0,188,189,5,110,0,0,189,190,5,
        116,0,0,190,191,5,105,0,0,191,192,5,116,0,0,192,194,5,121,0,0,193,
        121,1,0,0,0,193,131,1,0,0,0,193,140,1,0,0,0,193,147,1,0,0,0,193,
        153,1,0,0,0,193,159,1,0,0,0,193,166,1,0,0,0,193,173,1,0,0,0,193,
        183,1,0,0,0,194,16,1,0,0,0,195,196,5,69,0,0,196,197,5,76,0,0,197,
        198,5,83,0,0,198,199,5,69,0,0,199,18,1,0,0,0,200,201,5,70,0,0,201,
        202,5,85,0,0,202,203,5,78,0,0,203,204,5,67,0,0,204,205,5,84,0,0,
        205,206,5,73,0,0,206,207,5,79,0,0,207,208,5,78,0,0,208,20,1,0,0,
        0,209,210,5,80,0,0,210,211,5,82,0,0,211,212,5,79,0,0,212,213,5,67,
        0,0,213,214,5,69,0,0,214,215,5,83,0,0,215,216,5,83,0,0,216,22,1,
        0,0,0,217,218,5,80,0,0,218,219,5,76,0,0,219,220,5,65,0,0,220,221,
        5,89,0,0,221,222,5,69,0,0,222,223,5,82,0,0,223,224,5,95,0,0,224,
        225,5,69,0,0,225,226,5,86,0,0,226,227,5,69,0,0,227,228,5,78,0,0,
        228,229,5,84,0,0,229,24,1,0,0,0,230,231,5,69,0,0,231,232,5,86,0,
        0,232,233,5,69,0,0,233,234,5,78,0,0,234,235,5,84,0,0,235,26,1,0,
        0,0,236,237,5,69,0,0,237,238,5,78,0,0,238,239,5,84,0,0,239,240,5,
        73,0,0,240,241,5,84,0,0,241,242,5,89,0,0,242,243,5,95,0,0,243,244,
        5,69,0,0,244,245,5,86,0,0,245,246,5,69,0,0,246,247,5,78,0,0,247,
        248,5,84,0,0,248,28,1,0,0,0,249,250,5,108,0,0,250,251,5,111,0,0,
        251,252,5,99,0,0,252,30,1,0,0,0,253,254,5,105,0,0,254,255,5,116,
        0,0,255,256,5,101,0,0,256,257,5,109,0,0,257,32,1,0,0,0,258,259,5,
        118,0,0,259,260,5,97,0,0,260,261,5,114,0,0,261,34,1,0,0,0,262,263,
        5,118,0,0,263,264,5,97,0,0,264,265,5,108,0,0,265,36,1,0,0,0,266,
        267,5,123,0,0,267,268,5,125,0,0,268,38,1,0,0,0,269,270,5,123,0,0,
        270,40,1,0,0,0,271,272,5,125,0,0,272,42,1,0,0,0,273,274,5,60,0,0,
        274,44,1,0,0,0,275,276,5,62,0,0,276,46,1,0,0,0,277,278,5,91,0,0,
        278,48,1,0,0,0,279,280,5,93,0,0,280,50,1,0,0,0,281,282,5,59,0,0,
        282,52,1,0,0,0,283,284,5,58,0,0,284,54,1,0,0,0,285,286,5,44,0,0,
        286,56,1,0,0,0,287,288,5,33,0,0,288,58,1,0,0,0,289,290,5,64,0,0,
        290,60,1,0,0,0,291,295,5,34,0,0,292,294,9,0,0,0,293,292,1,0,0,0,
        294,297,1,0,0,0,295,296,1,0,0,0,295,293,1,0,0,0,296,298,1,0,0,0,
        297,295,1,0,0,0,298,299,5,34,0,0,299,62,1,0,0,0,300,302,2,48,57,
        0,301,300,1,0,0,0,302,303,1,0,0,0,303,301,1,0,0,0,303,304,1,0,0,
        0,304,311,1,0,0,0,305,307,5,46,0,0,306,308,2,48,57,0,307,306,1,0,
        0,0,308,309,1,0,0,0,309,307,1,0,0,0,309,310,1,0,0,0,310,312,1,0,
        0,0,311,305,1,0,0,0,311,312,1,0,0,0,312,64,1,0,0,0,313,315,7,3,0,
        0,314,313,1,0,0,0,315,316,1,0,0,0,316,314,1,0,0,0,316,317,1,0,0,
        0,317,66,1,0,0,0,318,323,3,69,34,0,319,322,3,69,34,0,320,322,2,48,
        57,0,321,319,1,0,0,0,321,320,1,0,0,0,322,325,1,0,0,0,323,321,1,0,
        0,0,323,324,1,0,0,0,324,68,1,0,0,0,325,323,1,0,0,0,326,327,7,4,0,
        0,327,70,1,0,0,0,328,330,7,5,0,0,329,328,1,0,0,0,330,331,1,0,0,0,
        331,329,1,0,0,0,331,332,1,0,0,0,332,72,1,0,0,0,15,0,85,96,106,110,
        117,193,295,303,309,311,316,321,323,331,1,6,0,0
    ]

class FJadeLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    MULTILINECOMMENT = 4
    NL = 5
    COMMENT = 6
    WS = 7
    TARGET = 8
    ELSE = 9
    FUNCTION = 10
    PROCESS = 11
    PLAYEREVENT = 12
    PLAYEREVENTALT = 13
    ENTITYEVENT = 14
    LOCATION = 15
    ITEM = 16
    VARIABLE = 17
    VALUE = 18
    CBRACE = 19
    LBRACE = 20
    RBRACE = 21
    LESSTHAN = 22
    GREATERTHAN = 23
    LBRACK = 24
    RBRACK = 25
    SEMI = 26
    COLON = 27
    COMMA = 28
    NEGATE = 29
    SELECTOR = 30
    STRING = 31
    NUMBER = 32
    CATEGORY = 33
    NAME = 34
    ACTION = 35

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'|'", "'('", "')'", "'ELSE'", "'FUNCTION'", "'PROCESS'", "'PLAYER_EVENT'", 
            "'EVENT'", "'ENTITY_EVENT'", "'loc'", "'item'", "'var'", "'val'", 
            "'{}'", "'{'", "'}'", "'<'", "'>'", "'['", "']'", "';'", "':'", 
            "','", "'!'", "'@'" ]

    symbolicNames = [ "<INVALID>",
            "MULTILINECOMMENT", "NL", "COMMENT", "WS", "TARGET", "ELSE", 
            "FUNCTION", "PROCESS", "PLAYEREVENT", "PLAYEREVENTALT", "ENTITYEVENT", 
            "LOCATION", "ITEM", "VARIABLE", "VALUE", "CBRACE", "LBRACE", 
            "RBRACE", "LESSTHAN", "GREATERTHAN", "LBRACK", "RBRACK", "SEMI", 
            "COLON", "COMMA", "NEGATE", "SELECTOR", "STRING", "NUMBER", 
            "CATEGORY", "NAME", "ACTION" ]

    ruleNames = [ "T__0", "T__1", "T__2", "MULTILINECOMMENT", "NL", "COMMENT", 
                  "WS", "TARGET", "ELSE", "FUNCTION", "PROCESS", "PLAYEREVENT", 
                  "PLAYEREVENTALT", "ENTITYEVENT", "LOCATION", "ITEM", "VARIABLE", 
                  "VALUE", "CBRACE", "LBRACE", "RBRACE", "LESSTHAN", "GREATERTHAN", 
                  "LBRACK", "RBRACK", "SEMI", "COLON", "COMMA", "NEGATE", 
                  "SELECTOR", "STRING", "NUMBER", "CATEGORY", "NAME", "PName", 
                  "ACTION" ]

    grammarFileName = "FJade.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


